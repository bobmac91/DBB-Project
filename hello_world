import com.ibm.dbb.build.*
println("Copying source from zFS to PDS . . .")
def copy = new CopyToPDS().file(new File("/u/usr1/build/helloworld.cbl"))
.dataset("USR1.BUILD.COBOL").member("HELLO")
copy.execute()
println("Compiling . . .")
def compile = new MVSExec().pgm("IGYCRCTL").parm("LIB")
compile.dd(new DDStatement().name("TASKLIB").dsn("IGY.SIGYCOMP").options("shr"))
compile.dd(new DDStatement().name("SYSIN").dsn("USR1.BUILD.COBOL(HELLO)").options("shr"))
compile.dd(new DDStatement().name("SYSLIN").dsn("USR1.BUILD.OBJ(HELLO)").options("shr"))
compile.dd(new DDStatement().name("SYSPRINT").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT1").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT2").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT3").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT4").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT5").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT6").options(“tracks space(5,5) unit(vio) new"))
compile.dd(new DDStatement().name("SYSUT7").options(“tracks space(5,5) unit(vio) new"))
compile.copy(new CopyToHFS().ddName("SYSPRINT").file(new File("/u/usr1/build/helloworld.log")))
def rc = compile.execute()
if (rc > 4)
println("Compile failed! RC=$rc")
else
println("Compile successful! RC=$rc")
