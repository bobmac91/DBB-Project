// Standard Java API
MVSExec compile = new MVSExec();
compile.setPgm("IGYCRCTL");
compile.setParm("LIB");
int rc = compile.execute()
// Supports setter method chaining
def compile = new MVSExec().pgm("IGYCRCTL").parm("LIB")
def rc = compile.execute()
// Creating DD Statements (Standard Java API)
DDStatement sysin = new DDStatement();
sysin.setName("SYSIN");
sysin.setDsn("USR1.BUILD.COBOL(HELLO)");
sysin.setOptions("shr");
compile.addDDStatement(sysin);
// Supports setter method chaining
compile.dd(new DDStatement().name("SYSIN").dsn("USR1.BUILD.COBOL(HELLO)").options("shr"))
// Define temporary datasets by omitting the dataset name (dsn)
compile.dd(new DDStatement().name("SYSUT1").options("cyl space(5,5) unit(vio) new"))
// Define DD concatenations by omitting the DD Statement name.
// The DD will be concatenated to the previously named DD Statement
compile.dd(new DDStatement().name("TASKLIB").dsn("IGY.V4R2M0.SIGYCOMP").options("shr"))
compile.dd(new DDStatement().dsn("DFH.V3R2M0.CICS.SDFHLOAD").options("shr"))
compile.dd(new DDStatement().dsn("DSN.V9R1M0.SDSNLOAD").options("shr"))
// Compile a COBOL program
def tempOpts = "cyl space(5,5) unit(vio) new"
def compile = new MVSExec().pgm("IGYCRCTL").parm("LIB")
compile.dd(new DDStatement().name("SYSIN").dsn("USR1.BUILD.COBOL(HELLO)").options("shr"))
compile.dd(new DDStatement().name("SYSLIN").dsn("USR1.BUILD.OBJ(HELLO)").options("shr"))
compile.dd(new DDStatement().name("SYSUT1").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT2").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT3").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT4").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT5").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT6").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT7").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT8").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT9").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT10").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT11").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT12").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT13").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT14").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT15").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT16").options(tempOpts))
compile.dd(new DDStatement().name("SYSUT17").options(tempOpts))
compile.dd(new DDStatement().name("SYSMDECK").options(tempOpts))
compile.dd(new DDStatement().name("TASKLIB").dsn("IGY.V6R1M0.SIGYCOMP").options("shr"))
def rc = compile.execute()
if (rc > 4)
println("Compile failed! RC=$rc")
else
println("Compile successful! RC=$rc")
